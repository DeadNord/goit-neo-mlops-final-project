stages:
  - retrain

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/aiops-quality-service"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  DOCKER_TLS_CERTDIR: ""

retrain-model:
  stage: retrain
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "webhook"'
  before_script:
    - apk add --no-cache python3 py3-pip git curl
    - pip3 install --no-cache-dir -r aiops-quality-project/requirements.txt
    - curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /usr/local/bin/yq
    - chmod +x /usr/local/bin/yq
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - python3 model/train.py --test-size 0.2 --random-state 42
    - docker build -t "$IMAGE_NAME:$IMAGE_TAG" .
    - docker push "$IMAGE_NAME:$IMAGE_TAG"
    - yq -i '.image.tag = strenv(IMAGE_TAG)' helm/values.yaml
    - yq -i '.version = (.version | split(".") | [.[0],.[1], ((.[2] | tonumber) + 1 | tostring)] | join("."))' helm/Chart.yaml
    - |
      if [ -n "$CI" ]; then
        git config --global user.email "$GITLAB_USER_EMAIL"
        git config --global user.name "$GITLAB_USER_NAME"
        git checkout -B "deploy/$CI_COMMIT_REF_NAME"
        git add model/artifacts helm/values.yaml helm/Chart.yaml
        git commit -m "chore: retrain model and update chart"
        git push --set-upstream origin "deploy/$CI_COMMIT_REF_NAME"
      else
        echo "Skipping git push because CI environment variables are missing"
      fi
  artifacts:
    paths:
      - model/artifacts/
      - helm/values.yaml
      - helm/Chart.yaml
    when: always
