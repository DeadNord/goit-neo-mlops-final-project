stages: [retrain, build, deploy]

variables:
  IMAGE: "$CI_REGISTRY_IMAGE/aiops-quality-service"

.reuse-docker: &reuse-docker
  image: docker:24
  services: [docker:24-dind]
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin

retrain-model:
  stage: retrain
  image: python:3.11-slim
  script:
    - pip install -r app/requirements.txt
    - python model/train.py
    - mkdir -p artifacts && cp /model/model.pkl artifacts/ || true
  artifacts:
    paths: [artifacts/model.pkl]
  when: manual
  only: [final-project]

build-image:
  stage: build
  <<: *reuse-docker
  dependencies: [retrain-model]
  script:
    - VERSION=$(cat VERSION)
    - docker build -f docker/Dockerfile.app -t "$IMAGE:$VERSION" .
    - docker push "$IMAGE:$VERSION"

bump-helm-and-tag:
  stage: deploy
  image: alpine/git
  script:
    - VERSION=$(cat VERSION)
    - sed -i "s/tag:.*/tag: \"${VERSION}\"/g" helm/values.yaml
    - sed -i "s/appVersion:.*/appVersion: \"${VERSION}\"/g" helm/Chart.yaml
    - git config user.name "ci-bot" && git config user.email "ci@example.com"
    - git add helm/values.yaml helm/Chart.yaml
    - git commit -m "chore: bump helm to ${VERSION}" || true
    - git tag "v${VERSION}" || true
    - git push origin HEAD:final-project --tags
  only: [final-project]
